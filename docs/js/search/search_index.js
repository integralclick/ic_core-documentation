var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/Address.html",[0,1.181,1,1.571]],["body/interfaces/Address.html",[0,1.664,1,2.67,2,1.648,3,0.31,4,0.31,5,0.263,6,2.316,7,0.31,8,1.267,9,3.75,10,3.75,11,3.75,12,3.75,13,3.75,14,3.75,15,1.691,16,0.625,17,0.034,18,0.581,19,3.108,20,1.648,21,0.31,22,1.132,23,2.316,24,1.132,25,1.239,26,1.239,27,1.494,28,1.828,29,1.828,30,2.045,31,1.648,32,1.828,33,3.089,34,2.045,35,2.045,36,2.045,37,2.045,38,2.045,39,1.494,40,2.316,41,0.018,42,0.024,43,0.018]],["title/modules/AppModule.html",[44,1.295,45,1.949]],["body/modules/AppModule.html",[3,0.326,4,0.326,5,0.277,17,0.036,18,1.045,21,0.326,41,0.019,42,0.025,43,0.019,44,2.113,45,3.608,46,1.572,47,1.924,48,2.437,49,2.437,50,1.735,51,3.216,52,2.437,53,2.818,54,2.818,55,3.227,56,3.216,57,2.437,58,2.152,59,3.398,60,3.719,61,0.993,62,4.484,63,3.398,64,4.484,65,3.398,66,2.818,67,1.735,68,3.216,69,2.437,70,3.398,71,2.839,72,3.398,73,3.398,74,3.398,75,3.398,76,3.398,77,3.216,78,3.398,79,3.398,80,2.152,81,1.924,82,0.058]],["title/controllers/AuthController.html",[83,1.742,84,1.949]],["body/controllers/AuthController.html",[3,0.259,4,0.259,5,0.22,7,0.259,16,0.425,17,0.036,18,1.004,21,0.259,41,0.015,42,0.021,43,0.015,61,0.787,81,1.525,82,0.046,83,1.525,84,2.422,85,2.234,86,2.234,87,2.234,88,1.468,89,2.711,90,3.189,91,3.189,92,2.234,93,3.007,94,2.422,95,3.824,96,0.763,97,2.694,98,1.019,99,1.019,100,0.928,101,1.468,102,3.065,103,2.694,104,3.007,105,3.824,106,2.694,107,2.694,108,4.446,109,1.706,110,2.27,111,2.234,112,2.234,113,3.172,114,1.525,115,3.172,116,2.234,117,1.525,118,2.234,119,1.247,120,2.234,121,1.525,122,2.234,123,2.234,124,2.694,125,0.944,126,1.375,127,2.743,128,1.34,129,3.824,130,1.952,131,2.694,132,1.858,133,1.861,134,2.694,135,3.824,136,2.743,137,2.741,138,2.694,139,2.694,140,2.694,141,2.694]],["title/classes/AuthCredentialsDto.html",[82,0.053,142,1.949]],["body/classes/AuthCredentialsDto.html",[3,0.354,4,0.354,5,0.301,7,0.354,8,1.382,15,1.468,16,0.526,17,0.035,18,0.663,21,0.354,24,1.829,25,2.185,41,0.021,42,0.027,43,0.021,82,0.081,94,2.994,96,0.944,142,2.994,143,1.552,144,4.33,145,3.058,146,3.686,147,4.728,148,4.728,149,2.188,150,4.728,151,3.686,152,3.686,153,3.686,154,4.33,155,3.058,156,3.058,157,4.728,158,2.088,159,3.686,160,3.922,161,3.686,162,3.686]],["title/modules/AuthModule.html",[44,1.295,55,1.742]],["body/modules/AuthModule.html",[3,0.245,4,0.245,5,0.208,16,0.283,17,0.036,18,1.047,21,0.245,22,1.288,41,0.014,42,0.021,43,0.014,44,1.815,46,1.179,47,1.443,48,1.828,49,1.828,50,1.301,51,3.092,52,3.092,55,3.262,56,2.636,57,1.828,58,1.614,60,2.114,61,0.745,66,2.114,67,1.301,69,1.828,81,2.082,82,0.044,84,2.73,88,0.978,96,0.509,98,0.679,99,0.98,100,0.619,101,0.978,110,2.661,111,2.114,163,2.114,164,2.114,165,2.114,166,3.297,167,2.661,168,2.549,169,2.73,170,3.676,171,2.549,172,3.676,173,4.719,174,2.549,175,3.676,176,2.114,177,3.676,178,2.549,179,2.549,180,3.676,181,1.828,182,2.549,183,1.828,184,2.549,185,2.636,186,2.549,187,2.328,188,2.549,189,2.114,190,1.614,191,2.549,192,2.549,193,1.828,194,2.549,195,2.549,196,1.614,197,2.549,198,2.114,199,2.549,200,2.549,201,2.549,202,1.301,203,2.549,204,2.549,205,2.549,206,2.114,207,2.549]],["title/injectables/AuthService.html",[110,1.571,208,0.82]],["body/injectables/AuthService.html",[3,0.161,4,0.161,5,0.137,7,0.161,15,1.18,16,0.462,17,0.036,18,0.953,20,0.855,21,0.161,22,0.936,24,1.551,25,1.025,26,1.594,27,1.542,33,1.512,38,1.691,41,0.009,42,0.015,43,0.009,61,0.489,67,0.855,80,1.691,82,0.046,88,1.025,89,2.703,90,1.915,91,1.915,92,2.215,93,2.814,96,0.829,98,1.107,99,1.107,100,1.008,101,1.459,102,2.407,104,2.153,110,1.364,112,1.389,113,2.215,123,1.389,125,0.936,126,2.12,128,1.952,130,2.462,132,1.459,133,1.455,142,1.061,149,1.236,158,0.948,183,1.201,208,0.712,209,0.775,210,1.389,211,2.671,212,2.671,213,1.201,214,2.407,215,4.643,216,1.675,217,1.915,218,2.671,219,1.675,220,1.675,221,2.671,222,1.675,223,1.389,224,2.671,225,3.331,226,1.675,227,1.389,228,1.389,229,2.763,230,1.389,231,1.675,232,1.675,233,1.512,234,1.389,235,1.389,236,1.201,237,1.201,238,1.389,239,1.675,240,1.201,241,2.215,242,1.201,243,0.775,244,2.671,245,1.389,246,1.675,247,1.675,248,2.407,249,1.675,250,1.675,251,1.675,252,3.331,253,1.675,254,2.215,255,1.675,256,3.801,257,1.675,258,2.763,259,1.675,260,1.389,261,1.201,262,2.671,263,2.048,264,2.215,265,1.675,266,0.855,267,1.201,268,2.215,269,1.389,270,1.675,271,1.675,272,1.675,273,1.675,274,1.675,275,1.675,276,1.389,277,3.331,278,1.675,279,1.675,280,1.389,281,1.675,282,1.201,283,2.215,284,1.675,285,1.675,286,1.675,287,2.671,288,2.671,289,1.675,290,1.675,291,1.675,292,1.675]],["title/classes/CreateUserDTO.html",[82,0.053,104,1.742]],["body/classes/CreateUserDTO.html",[3,0.26,4,0.26,5,0.221,7,0.26,8,1.122,15,1.612,16,0.622,17,0.035,18,0.487,21,0.26,24,1.563,25,1.712,26,1.712,27,2.064,28,2.525,29,2.525,31,2.277,32,2.525,41,0.015,42,0.022,43,0.015,82,0.066,94,3.539,96,1.115,100,1.356,104,2.174,143,1.14,154,4.636,155,2.246,156,2.246,158,1.533,160,2.246,243,2.855,293,4.715,294,1.942,295,2.708,296,4.459,297,2.708,298,4.851,299,2.708,300,2.708,301,2.708,302,2.708,303,2.708,304,2.708,305,2.708,306,2.708,307,5.122,308,2.708,309,2.708,310,2.708]],["title/interfaces/IResponse.html",[0,1.181,119,1.424]],["body/interfaces/IResponse.html",[0,1.511,2,2.01,3,0.378,4,0.378,5,0.321,7,0.378,8,1.441,15,1.579,16,0.646,17,0.034,21,0.378,39,2.491,41,0.022,42,0.028,43,0.022,119,2.281,137,3.194,149,2.61,266,2.88,311,3.266,312,4.045,313,4.045]],["title/interfaces/JwtPayload.html",[0,1.181,233,1.742]],["body/interfaces/JwtPayload.html",[0,1.577,2,2.098,3,0.395,4,0.395,5,0.335,7,0.395,8,1.479,15,1.646,16,0.61,17,0.034,21,0.395,24,2.007,26,2.198,27,2.65,41,0.023,42,0.028,43,0.023,233,2.866,314,3.408,315,3.408]],["title/injectables/JwtStrategy.html",[166,1.742,208,0.82]],["body/injectables/JwtStrategy.html",[3,0.29,4,0.29,5,0.246,7,0.29,16,0.461,17,0.036,18,1.033,20,1.543,21,0.29,22,1.059,23,2.168,24,1.452,41,0.017,42,0.023,43,0.017,61,0.883,67,1.543,69,2.168,82,0.052,88,1.591,89,2.415,96,0.827,98,1.105,99,1.105,100,1.006,101,1.16,102,2.624,125,1.452,126,1.543,128,1.452,130,1.543,132,1.16,133,1.059,166,2.347,181,2.168,187,2.624,196,1.914,208,1.105,209,1.399,213,2.168,214,3.223,217,2.972,227,3.438,233,2.882,234,2.507,235,2.507,236,2.168,237,2.168,240,2.972,242,2.168,243,1.399,245,2.507,248,1.914,263,2.189,282,2.972,316,2.507,317,3.022,318,4.144,319,3.022,320,3.022,321,2.507,322,3.022,323,2.168,324,3.022,325,3.022,326,3.022,327,3.022,328,3.022]],["title/injectables/LoggingInterceptor.html",[208,0.82,329,2.207]],["body/injectables/LoggingInterceptor.html",[3,0.347,4,0.347,5,0.294,7,0.347,16,0.401,17,0.035,18,0.93,21,0.347,41,0.02,42,0.026,43,0.02,61,1.055,82,0.062,88,1.79,96,0.72,98,0.962,99,0.962,100,0.876,101,1.386,128,1.265,132,1.386,202,1.843,208,1.243,209,1.67,329,3.345,330,2.994,331,4.665,332,4.665,333,5.463,334,4.531,335,5.463,336,3.61,337,3.61,338,5.168,339,4.665,340,2.994,341,4.665,342,3.61,343,3.61,344,3.61,345,3.869,346,3.61,347,3.61,348,3.61,349,3.61]],["title/classes/LoginUserDTO.html",[82,0.053,93,1.742]],["body/classes/LoginUserDTO.html",[3,0.377,4,0.377,5,0.32,7,0.377,8,1.437,15,1.578,16,0.597,17,0.034,21,0.377,24,1.883,25,2.062,26,2.062,41,0.022,42,0.028,43,0.022,82,0.067,93,2.785,96,1.072,143,1.651,243,2.836,294,2.813,350,4.672,351,3.923,352,3.923,353,3.923]],["title/classes/PaginatorClass.html",[82,0.053,354,1.949]],["body/classes/PaginatorClass.html",[3,0.352,4,0.352,5,0.298,7,0.352,8,1.376,16,0.579,17,0.036,21,0.352,41,0.021,42,0.026,43,0.021,82,0.063,96,1.038,98,0.976,99,0.976,100,0.888,125,1.283,132,1.807,143,1.541,354,2.981,355,3.036,356,3.295,357,3.731,358,3.904,359,4.707,360,2.318,361,2.981,362,2.981,363,2.981,364,4.707,365,3.661,366,3.904,367,3.661,368,3.661,369,3.661,370,3.661,371,3.661,372,3.661]],["title/injectables/PaginatorMiddleware.html",[190,1.949,208,0.82]],["body/injectables/PaginatorMiddleware.html",[3,0.359,4,0.359,5,0.305,7,0.359,16,0.416,17,0.035,18,0.859,21,0.359,41,0.021,42,0.027,43,0.021,61,1.093,82,0.064,88,1.832,96,0.746,98,0.997,99,0.997,100,0.908,101,1.435,128,1.31,133,1.31,176,4.359,190,3.022,202,1.909,208,1.272,209,1.73,334,4.592,354,2.368,373,3.102,374,3.958,375,4.772,376,5.255,377,3.739,378,2.682,379,2.682,380,4.772,381,3.739,382,4.772,383,3.739,384,3.739]],["title/modules/PipesModule.html",[44,1.295,71,1.949]],["body/modules/PipesModule.html",[3,0.44,4,0.44,5,0.373,17,0.034,18,0.824,21,0.44,41,0.026,42,0.03,43,0.026,44,2.275,46,2.119,61,1.338,71,3.422,82,0.078,385,4.579]],["title/classes/ResponseError.html",[82,0.053,117,1.742]],["body/classes/ResponseError.html",[3,0.306,4,0.306,5,0.26,7,0.306,8,1.256,15,1.448,16,0.622,17,0.036,18,0.574,21,0.306,39,1.989,41,0.018,42,0.024,43,0.018,80,2.02,82,0.055,96,1.117,98,0.85,99,0.85,100,0.774,117,2.434,119,2.25,125,1.118,137,2.753,143,1.343,149,2.25,202,2.194,266,2.969,312,3.487,313,3.487,386,4.102,387,2.645,388,3.565,389,3.189,390,4.033,391,2.645,392,3.189,393,3.189,394,3.189,395,3.189,396,3.189,397,2.645,398,2.645,399,2.645,400,2.645,401,3.189,402,2.645,403,2.287,404,3.189]],["title/classes/ResponseSuccess.html",[82,0.053,114,1.742]],["body/classes/ResponseSuccess.html",[3,0.289,4,0.289,5,0.245,7,0.289,8,1.206,15,1.418,16,0.611,17,0.036,18,0.541,21,0.289,39,2.462,41,0.017,42,0.023,43,0.017,77,2.155,82,0.051,96,1.097,98,0.801,99,0.801,100,0.729,114,2.338,119,2.182,125,1.053,127,2.155,128,1.053,136,2.155,137,2.875,143,1.265,149,2.182,202,2.107,266,2.875,312,3.382,313,3.382,386,4.038,388,3.424,390,3.424,391,3.424,397,2.493,398,2.493,399,2.493,400,2.493,402,2.493,403,2.155,405,2.493,406,5.076,407,3.005,408,3.005,409,3.005,410,3.005,411,3.005,412,3.005,413,4.128,414,3.005,415,4.128,416,3.005,417,3.005]],["title/classes/UserDTO.html",[82,0.053,121,1.742]],["body/classes/UserDTO.html",[1,1.999,3,0.208,4,0.208,5,0.176,7,0.208,8,0.951,15,1.619,16,0.658,17,0.035,21,0.208,24,1.372,25,1.503,26,1.503,27,1.812,28,2.218,29,2.218,30,2.48,31,1.999,32,2.218,33,2.782,34,2.48,35,2.48,36,2.48,37,2.48,41,0.012,42,0.018,43,0.012,82,0.037,96,1.174,98,0.576,99,0.576,100,0.525,121,1.844,125,0.758,143,0.91,243,2.917,276,2.701,283,3.249,358,2.701,360,1.369,418,1.793,419,3.916,420,3.256,421,2.162,422,2.162,423,2.162,424,2.162,425,2.162,426,2.162,427,2.162,428,2.162,429,2.162,430,2.162,431,2.162,432,2.162,433,2.162,434,2.162,435,2.162,436,2.162,437,2.162,438,2.162,439,2.162,440,2.162,441,2.162,442,2.162,443,2.162,444,2.162,445,2.162,446,2.162,447,2.162,448,2.162,449,2.162,450,2.162,451,2.162,452,2.162,453,2.162,454,2.162,455,3.256,456,3.256,457,2.162,458,2.162,459,2.162,460,2.162,461,2.162,462,2.162,463,2.162,464,2.162,465,2.162,466,2.162]],["title/interfaces/Users.html",[0,1.181,22,1.078]],["body/interfaces/Users.html",[0,1.447,1,2.834,2,1.347,3,0.253,4,0.253,5,0.215,6,1.893,7,0.253,8,1.101,9,1.893,10,1.893,11,1.893,12,1.893,13,1.893,14,1.893,15,1.68,16,0.67,17,0.035,18,0.475,19,3.153,20,1.347,21,0.253,22,1.321,23,2.703,24,1.681,25,1.841,26,1.841,27,2.219,28,2.716,29,2.716,30,3.037,31,2.448,32,2.716,33,3.393,34,3.037,35,3.037,36,3.037,37,3.037,38,3.037,39,2.034,40,3.439,41,0.015,42,0.021,43,0.015]],["title/controllers/UsersController.html",[83,1.742,169,1.949]],["body/controllers/UsersController.html",[3,0.287,4,0.287,5,0.244,7,0.287,17,0.036,18,0.987,21,0.287,22,1.047,41,0.026,42,0.023,43,0.017,61,0.873,81,1.692,82,0.051,83,1.692,86,2.478,88,1.578,89,2.4,94,1.892,96,0.596,98,0.796,99,0.796,100,0.725,101,1.147,102,2.604,114,1.692,115,3.41,116,2.478,117,1.692,118,2.478,119,1.383,120,2.478,125,1.047,126,1.525,127,2.143,128,1.647,130,1.525,132,1.578,133,1.441,136,2.143,137,2.328,167,2.4,169,2.604,189,2.478,243,1.383,263,1.383,356,2.977,357,2.949,378,3.632,467,2.478,468,3.899,469,2.988,470,4.701,471,2.988,472,2.988,473,2.988,474,2.988,475,2.988,476,2.988,477,2.988,478,2.478,479,2.988,480,2.988,481,2.988,482,2.988,483,4.112,484,2.988,485,2.988,486,2.988,487,2.988,488,2.988,489,2.988,490,2.988,491,2.988,492,2.988,493,2.988,494,2.988,495,2.988]],["title/injectables/UsersService.html",[167,1.571,208,0.82]],["body/injectables/UsersService.html",[3,0.267,4,0.267,5,0.227,7,0.267,8,1.143,16,0.503,17,0.036,18,0.965,20,1.996,21,0.267,22,1.813,41,0.025,42,0.022,43,0.016,61,0.812,67,1.419,82,0.048,88,1.501,89,2.31,96,0.903,98,1.042,99,1.042,100,0.949,101,1.067,121,1.574,122,2.306,125,1.37,126,1.996,128,1.813,130,1.419,132,1.501,133,0.974,167,1.996,208,1.042,209,1.287,213,1.994,214,3.109,217,2.805,236,1.994,237,1.994,242,2.805,243,1.81,263,1.287,356,3.109,357,2.805,361,3.398,362,1.761,363,1.761,468,3.244,496,2.306,497,4.524,498,4.909,499,3.911,500,3.911,501,2.78,502,3.911,503,3.911,504,2.78,505,2.306,506,3.911,507,2.78,508,2.78,509,2.78,510,2.78,511,3.244]],["title/injectables/ValidationPipe.html",[109,1.949,208,0.82]],["body/injectables/ValidationPipe.html",[3,0.246,4,0.246,5,0.209,7,0.246,15,0.683,16,0.41,17,0.036,18,0.851,21,0.246,39,2.001,41,0.024,42,0.021,43,0.014,61,0.748,82,0.074,88,1.416,89,2.207,96,0.863,98,1.152,99,1.152,100,1.049,101,1.659,109,2.336,126,2.666,128,1.83,130,1.308,132,1.816,133,1.293,149,1.185,158,1.45,202,1.308,208,0.983,209,1.185,228,2.124,229,3.06,230,2.124,240,1.837,248,2.336,258,3.586,260,2.124,261,1.837,264,2.124,266,1.883,267,1.837,268,2.124,269,2.124,360,2.336,361,1.622,363,3.175,512,2.124,513,3.689,514,3.689,515,3.689,516,3.689,517,2.561,518,3.689,519,2.561,520,4.73,521,3.689,522,3.924,523,4.73,524,2.561,525,3.689,526,2.561,527,2.124,528,2.561,529,2.561,530,2.561,531,2.561,532,2.561,533,2.561,534,2.561,535,2.561,536,2.561,537,2.561,538,2.561,539,2.561,540,2.561,541,2.561,542,2.561,543,2.561,544,2.561]],["title/coverage.html",[545,3.48]],["body/coverage.html",[0,1.828,1,1.327,5,0.212,6,2.674,16,0.289,17,0.035,22,0.911,31,1.327,41,0.015,42,0.021,43,0.015,50,1.327,68,1.864,82,0.093,83,2.111,84,1.646,85,2.156,93,1.472,104,1.472,109,1.646,110,1.327,114,1.472,117,1.472,119,1.203,121,1.472,133,0.911,142,1.646,144,2.156,145,2.156,166,1.472,167,1.327,169,1.646,185,1.864,187,1.646,190,1.646,208,1.399,210,2.156,233,1.472,261,4.431,263,1.203,293,2.156,294,2.674,311,2.156,314,2.156,315,2.156,316,2.156,329,1.864,330,2.156,350,2.156,354,1.646,355,2.156,373,2.156,379,1.864,386,2.674,387,2.156,405,2.156,418,2.156,467,2.156,496,2.156,512,2.156,545,2.156,546,2.156,547,2.6,548,2.6,549,4.36,550,3.728,551,2.6,552,5.042,553,2.6,554,4.36,555,2.6,556,3.616,557,4.038,558,4.763,559,2.156,560,2.156,561,4.36,562,4.183,563,2.156,564,5.248,565,5.248,566,2.156,567,2.156,568,2.156,569,2.6,570,2.6]],["title/dependencies.html",[47,2.095,571,2.572]],["body/dependencies.html",[17,0.036,20,2.583,41,0.019,42,0.025,43,0.019,47,1.956,61,1.009,67,1.763,82,0.078,158,2.567,181,2.477,183,2.477,196,2.187,238,2.865,241,2.865,323,3.251,340,2.865,356,2.187,522,2.865,527,2.865,572,5.059,573,3.454,574,3.454,575,3.454,576,3.454,577,3.454,578,4.533,579,3.454,580,3.454,581,3.454,582,3.454,583,2.865,584,3.454,585,2.865,586,3.454,587,3.454,588,3.454,589,3.454,590,2.865,591,3.454,592,3.454,593,3.454,594,3.454,595,3.454,596,3.454,597,3.454,598,3.454,599,3.454,600,3.454,601,3.454,602,3.454,603,3.454,604,3.454,605,3.454,606,3.454,607,3.454,608,3.454,609,3.454,610,3.454,611,3.454]],["title/miscellaneous/functions.html",[612,1.628,613,3.069]],["body/miscellaneous/functions.html",[7,0.452,17,0.031,41,0.026,42,0.031,43,0.026,50,3.058,568,3.901,612,2.978,613,3.901,614,4.703,615,4.703]],["title/index.html",[7,0.247,616,2.133,617,2.572]],["body/index.html",[2,0.891,17,0.034,19,1.251,22,0.611,25,0.67,26,0.67,41,0.01,42,0.015,43,0.01,44,1.162,46,0.807,50,0.891,58,1.747,82,0.03,87,1.447,90,1.251,91,1.251,133,0.967,193,1.979,196,2.463,206,1.447,214,1.105,223,1.447,254,2.289,263,1.277,267,1.979,280,1.447,282,1.251,321,2.289,323,1.251,362,1.105,374,3.914,379,1.251,403,1.251,478,1.447,505,1.447,511,1.447,546,4.365,557,1.251,583,1.447,585,2.839,590,2.289,616,1.447,618,1.745,619,1.447,620,1.745,621,2.759,622,1.745,623,2.759,624,5.037,625,2.759,626,2.759,627,1.745,628,3.89,629,1.745,630,1.745,631,1.745,632,2.759,633,1.745,634,5.158,635,4.237,636,4.505,637,1.745,638,2.759,639,1.745,640,2.289,641,1.745,642,1.745,643,2.289,644,4.892,645,4.719,646,4.237,647,1.745,648,1.745,649,2.759,650,2.289,651,1.447,652,1.745,653,1.745,654,1.447,655,3.89,656,2.455,657,1.745,658,1.745,659,1.745,660,2.759,661,1.745,662,1.745,663,1.745,664,1.745,665,1.745,666,1.745,667,1.745,668,2.759,669,3.423,670,1.745,671,2.759,672,3.423,673,3.423,674,5.262,675,1.745,676,2.759,677,2.759,678,4.892,679,3.423,680,1.447,681,3.423,682,1.745,683,3.423,684,1.745,685,2.759,686,1.745,687,2.759,688,1.745,689,1.745,690,3.423,691,1.745,692,1.745,693,1.745,694,1.745,695,1.745,696,1.745,697,1.745,698,1.745,699,1.745,700,1.745,701,1.745,702,1.745,703,1.745,704,1.745,705,1.745,706,1.745,707,1.745,708,1.745,709,1.745,710,2.759,711,1.745,712,1.745,713,1.745,714,1.745,715,1.447,716,1.745,717,1.745,718,2.759,719,1.745,720,1.745,721,1.745,722,1.745,723,1.745,724,1.745,725,1.745,726,1.745,727,1.745,728,1.745,729,2.759,730,1.745,731,4.892,732,1.745,733,1.745,734,1.745,735,2.759,736,3.89,737,1.745,738,1.745,739,2.759,740,1.745,741,1.745,742,1.745,743,1.745,744,3.89,745,1.745,746,2.759,747,1.745,748,1.745,749,1.745,750,1.745,751,2.759,752,1.745,753,1.745,754,2.759,755,1.745,756,1.745,757,1.745,758,1.745,759,1.745,760,1.745,761,1.745,762,1.745,763,1.745,764,1.745,765,1.745,766,1.745,767,1.745,768,1.745,769,1.745,770,1.745,771,1.745,772,1.745,773,1.745,774,1.745,775,1.745,776,1.745,777,1.745,778,1.745,779,1.745,780,1.745,781,1.745,782,1.745,783,1.745,784,1.745]],["title/modules.html",[46,1.941]],["body/modules.html",[17,0.03,41,0.026,42,0.03,43,0.026,45,2.912,46,2.128,55,2.604,71,2.912,785,5.418,786,5.418,787,5.418,788,5.759,789,4.599,790,4.599]],["title/overview.html",[791,3.48]],["body/overview.html",[2,1.966,17,0.034,41,0.022,42,0.027,43,0.022,44,1.621,45,3.543,46,1.782,47,2.18,48,2.761,49,2.761,50,1.966,51,2.761,52,2.761,53,3.194,54,3.194,55,3.484,56,3.486,57,2.761,58,2.438,81,2.18,110,2.719,143,1.621,163,3.194,164,3.194,165,3.194,166,3.388,167,2.719,209,1.782,791,3.194,792,3.85,793,3.85,794,3.85,795,3.85,796,3.85]],["title/miscellaneous/variables.html",[612,1.628,656,2.653]],["body/miscellaneous/variables.html",[1,1.144,7,0.215,9,1.607,10,1.607,11,1.607,12,1.607,13,1.607,14,1.607,15,1.543,16,0.614,17,0.036,24,0.785,25,0.86,26,0.86,27,1.037,28,1.269,29,1.269,30,2.118,31,2.265,32,1.269,33,2.689,34,1.419,35,1.419,36,1.419,37,1.419,38,1.419,39,1.037,40,1.607,41,0.013,42,0.019,43,0.013,68,2.87,77,3.182,80,1.419,125,0.785,128,1.172,132,1.284,133,0.785,149,1.548,185,2.399,187,2.534,193,1.607,198,1.859,248,1.419,263,1.548,266,1.708,345,1.859,360,2.118,361,1.419,362,3.666,363,3.548,366,1.859,378,1.607,556,1.859,557,1.607,559,3.319,560,1.859,562,1.859,563,2.774,566,3.319,567,2.774,612,1.419,619,1.859,640,1.859,643,1.859,650,1.859,651,1.859,654,2.774,656,1.607,680,3.681,715,2.774,797,4.002,798,4.748,799,2.241,800,3.345,801,2.241,802,2.241,803,3.345,804,2.241,805,2.241,806,3.345,807,3.345,808,2.241,809,2.241,810,2.241,811,2.241,812,2.241,813,2.241,814,2.241,815,2.241,816,2.241,817,2.241,818,2.241,819,2.241,820,2.241,821,2.241,822,2.241,823,2.241,824,2.241,825,2.241,826,3.345,827,2.241,828,3.345,829,3.345,830,2.241,831,2.241,832,2.241,833,2.241,834,2.241,835,2.241,836,2.241]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/Address.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"interfaces/IResponse.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginUserDTO.html":{},"classes/PaginatorClass.html":{},"injectables/PaginatorMiddleware.html":{},"modules/PipesModule.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["0.1.12",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":582,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":561,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":550,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":551,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":366,"title":{},"body":{"classes/PaginatorClass.html":{},"miscellaneous/variables.html":{}}}],["1.0.1",{"_index":587,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":589,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":584,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":565,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":364,"title":{},"body":{"classes/PaginatorClass.html":{}}}],["100",{"_index":564,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":793,"title":{},"body":{"overview.html":{}}}],["2.0.3",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["2019/07/8",{"_index":749,"title":{},"body":{"index.html":{}}}],["3",{"_index":792,"title":{},"body":{"overview.html":{}}}],["3.1.0",{"_index":586,"title":{},"body":{"dependencies.html":{}}}],["3.18.0",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["3600",{"_index":201,"title":{},"body":{"modules/AuthModule.html":{}}}],["4",{"_index":796,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["5.6.3",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":794,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["6.1.1",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["6.5.2",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":795,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["_error",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["_user",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstoken",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserDTO.html":{}}}],["addr1",{"_index":9,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Users.html":{},"miscellaneous/variables.html":{}}}],["addr2",{"_index":10,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Users.html":{},"miscellaneous/variables.html":{}}}],["address",{"_index":1,"title":{"interfaces/Address.html":{}},"body":{"interfaces/Address.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["admin_role",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ahora",{"_index":485,"title":{},"body":{"controllers/UsersController.html":{}}}],["allowed",{"_index":715,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["alpha",{"_index":731,"title":{},"body":{"index.html":{}}}],["already",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["annotation",{"_index":698,"title":{},"body":{"index.html":{}}}],["api",{"_index":628,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":615,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apply(paginatormiddleware",{"_index":203,"title":{},"body":{"modules/AuthModule.html":{}}}],["appmodule",{"_index":45,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["architecture",{"_index":776,"title":{},"body":{"index.html":{}}}],["argumentmetadata",{"_index":523,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["array",{"_index":543,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["async",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["auth",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["auth.controller",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":84,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authcredentialsdto",{"_index":142,"title":{"classes/AuthCredentialsDto.html":{}},"body":{"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authentication",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["authmodule",{"_index":55,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":110,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":682,"title":{},"body":{"index.html":{}}}],["available",{"_index":790,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":34,"title":{},"body":{"interfaces/Address.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["añadir",{"_index":475,"title":{},"body":{"controllers/UsersController.html":{}}}],["badrequestexception",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidationPipe.html":{}}}],["badrequestexception('no",{"_index":529,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["badrequestexception(`user",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception(error",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["bash",{"_index":635,"title":{},"body":{"index.html":{}}}],["bcryptjs",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["belong",{"_index":623,"title":{},"body":{"index.html":{}}}],["benefit",{"_index":665,"title":{},"body":{"index.html":{}}}],["better",{"_index":653,"title":{},"body":{"index.html":{}}}],["birth",{"_index":32,"title":{},"body":{"interfaces/Address.html":{},"classes/CreateUserDTO.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["boolean",{"_index":39,"title":{},"body":{"interfaces/Address.html":{},"interfaces/IResponse.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"interfaces/Users.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{}}}],["box",{"_index":648,"title":{},"body":{"index.html":{}}}],["browse",{"_index":788,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":785,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":762,"title":{},"body":{"index.html":{}}}],["build",{"_index":674,"title":{},"body":{"index.html":{}}}],["build:doc",{"_index":710,"title":{},"body":{"index.html":{}}}],["builderror",{"_index":513,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["builderror(errors",{"_index":516,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["building",{"_index":681,"title":{},"body":{"index.html":{}}}],["bypassed",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callhandler",{"_index":335,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["capturar",{"_index":480,"title":{},"body":{"controllers/UsersController.html":{}}}],["catch",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"classes/ResponseSuccess.html":{},"controllers/UsersController.html":{}}}],["catch(error",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["changelog",{"_index":781,"title":{},"body":{"index.html":{}}}],["changes",{"_index":669,"title":{},"body":{"index.html":{}}}],["check",{"_index":782,"title":{},"body":{"index.html":{}}}],["city",{"_index":11,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Users.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":82,"title":{"classes/AuthCredentialsDto.html":{},"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"classes/PaginatorClass.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"classes/UserDTO.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginUserDTO.html":{},"classes/PaginatorClass.html":{},"injectables/PaginatorMiddleware.html":{},"modules/PipesModule.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["classes",{"_index":143,"title":{},"body":{"classes/AuthCredentialsDto.html":{},"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"classes/PaginatorClass.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"classes/UserDTO.html":{},"overview.html":{}}}],["classes/paginator.class",{"_index":381,"title":{},"body":{"injectables/PaginatorMiddleware.html":{}}}],["click",{"_index":693,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["code",{"_index":683,"title":{},"body":{"index.html":{}}}],["comand",{"_index":667,"title":{},"body":{"index.html":{}}}],["command",{"_index":672,"title":{},"body":{"index.html":{}}}],["common",{"_index":739,"title":{},"body":{"index.html":{}}}],["company",{"_index":719,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":729,"title":{},"body":{"index.html":{}}}],["compression",{"_index":583,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["conduct",{"_index":720,"title":{},"body":{"index.html":{}}}],["config",{"_index":585,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["config.get('db.database",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.get('jwt.secret",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.get('server.port",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/constants",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configuration",{"_index":740,"title":{},"body":{"index.html":{}}}],["configure",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{}}}],["configure(consumer",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{}}}],["consent",{"_index":767,"title":{},"body":{"index.html":{}}}],["console.log('before",{"_index":343,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["console.log(`after",{"_index":348,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["console.log(new",{"_index":416,"title":{},"body":{"classes/ResponseSuccess.html":{}}}],["console.warn(new",{"_index":401,"title":{},"body":{"classes/ResponseError.html":{}}}],["const",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PaginatorMiddleware.html":{},"classes/ResponseSuccess.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":738,"title":{},"body":{"index.html":{}}}],["constraint[0",{"_index":540,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["constraint[1",{"_index":541,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["constructor",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/PaginatorClass.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor(infomessage",{"_index":388,"title":{},"body":{"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{}}}],["constructor(object",{"_index":358,"title":{},"body":{"classes/PaginatorClass.html":{},"classes/UserDTO.html":{}}}],["constructor(usermodel",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["consumer",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{}}}],["context",{"_index":337,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["continuous",{"_index":774,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":625,"title":{},"body":{"index.html":{}}}],["controller",{"_index":83,"title":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":473,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{},"overview.html":{}}}],["core",{"_index":618,"title":{},"body":{"index.html":{}}}],["cors",{"_index":734,"title":{},"body":{"index.html":{}}}],["country",{"_index":12,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Users.html":{},"miscellaneous/variables.html":{}}}],["course",{"_index":689,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":545,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creados",{"_index":484,"title":{},"body":{"controllers/UsersController.html":{}}}],["create",{"_index":657,"title":{},"body":{"index.html":{}}}],["created",{"_index":751,"title":{},"body":{"index.html":{}}}],["createdat",{"_index":35,"title":{},"body":{"interfaces/Address.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"miscellaneous/variables.html":{}}}],["createparamdecorator((data",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createuserdto",{"_index":104,"title":{"classes/CreateUserDTO.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"coverage.html":{}}}],["credentials.dto",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["credentials.dto.ts",{"_index":145,"title":{},"body":{"classes/AuthCredentialsDto.html":{},"coverage.html":{}}}],["credentials.dto.ts:16",{"_index":151,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["credentials.dto.ts:7",{"_index":153,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["crypto",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["crypto.createhmac('sha256",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["csurf",{"_index":588,"title":{},"body":{"dependencies.html":{}}}],["custom",{"_index":754,"title":{},"body":{"index.html":{}}}],["d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":162,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["data",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IResponse.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":765,"title":{},"body":{"index.html":{}}}],["date",{"_index":33,"title":{},"body":{"interfaces/Address.html":{},"injectables/AuthService.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"miscellaneous/variables.html":{}}}],["date().tostring",{"_index":402,"title":{},"body":{"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{}}}],["date.now",{"_index":345,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"miscellaneous/variables.html":{}}}],["dateformat",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["dateformat).toisostring",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["db",{"_index":760,"title":{},"body":{"index.html":{}}}],["de",{"_index":487,"title":{},"body":{"controllers/UsersController.html":{}}}],["declarations",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["decoded",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoded.user",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoded[data",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decodedemail",{"_index":470,"title":{},"body":{"controllers/UsersController.html":{}}}],["decorator",{"_index":478,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["decorators",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"classes/CreateUserDTO.html":{},"controllers/UsersController.html":{}}}],["defaul",{"_index":637,"title":{},"body":{"index.html":{}}}],["default",{"_index":362,"title":{},"body":{"classes/PaginatorClass.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["default.yml",{"_index":662,"title":{},"body":{"index.html":{}}}],["defaultstrategy",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginUserDTO.html":{},"classes/PaginatorClass.html":{},"injectables/PaginatorMiddleware.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["delete",{"_index":507,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleted",{"_index":38,"title":{},"body":{"interfaces/Address.html":{},"injectables/AuthService.html":{},"interfaces/Users.html":{},"miscellaneous/variables.html":{}}}],["deletedat",{"_index":40,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Users.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":47,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{},"overview.html":{}}}],["development",{"_index":645,"title":{},"body":{"index.html":{}}}],["development.yml",{"_index":664,"title":{},"body":{"index.html":{}}}],["dist/main.js",{"_index":692,"title":{},"body":{"index.html":{}}}],["docs",{"_index":505,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["docs.map((doc",{"_index":508,"title":{},"body":{"injectables/UsersService.html":{}}}],["document",{"_index":19,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Users.html":{},"index.html":{}}}],["documentation",{"_index":546,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotenv",{"_index":590,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["double",{"_index":770,"title":{},"body":{"index.html":{}}}],["dto",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["dto.birth",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto.email",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto.username",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto/auth",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto/create",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/login",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/user.dto",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["el.property",{"_index":537,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["email",{"_index":26,"title":{},"body":{"interfaces/Address.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"interfaces/JwtPayload.html":{},"classes/LoginUserDTO.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["encription",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enum",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env",{"_index":658,"title":{},"body":{"index.html":{}}}],["environment",{"_index":655,"title":{},"body":{"index.html":{}}}],["error",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/IResponse.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"controllers/UsersController.html":{}}}],["error.dto",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["error.dto.ts",{"_index":387,"title":{},"body":{"classes/ResponseError.html":{},"coverage.html":{}}}],["error.dto.ts:11",{"_index":395,"title":{},"body":{"classes/ResponseError.html":{}}}],["error.dto.ts:12",{"_index":392,"title":{},"body":{"classes/ResponseError.html":{}}}],["error.dto.ts:13",{"_index":394,"title":{},"body":{"classes/ResponseError.html":{}}}],["error.dto.ts:14",{"_index":393,"title":{},"body":{"classes/ResponseError.html":{}}}],["error.dto.ts:15",{"_index":396,"title":{},"body":{"classes/ResponseError.html":{}}}],["error.dto.ts:4",{"_index":389,"title":{},"body":{"classes/ResponseError.html":{}}}],["errormessage",{"_index":312,"title":{},"body":{"interfaces/IResponse.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{}}}],["errors",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidationPipe.html":{}}}],["errors.foreach(el",{"_index":535,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errors.length",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidationPipe.html":{}}}],["etc",{"_index":779,"title":{},"body":{"index.html":{}}}],["ev",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["even",{"_index":652,"title":{},"body":{"index.html":{}}}],["everytime",{"_index":707,"title":{},"body":{"index.html":{}}}],["example.env",{"_index":660,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":333,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["exists",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":21,"title":{},"body":{"interfaces/Address.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"interfaces/IResponse.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginUserDTO.html":{},"classes/PaginatorClass.html":{},"injectables/PaginatorMiddleware.html":{},"modules/PipesModule.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["exports",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["express",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":23,"title":{},"body":{"interfaces/Address.html":{},"injectables/JwtStrategy.html":{},"interfaces/Users.html":{}}}],["extractjwt",{"_index":322,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":327,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidationPipe.html":{}}}],["false",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/ResponseError.html":{},"miscellaneous/variables.html":{}}}],["feature",{"_index":649,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Address.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"interfaces/IResponse.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginUserDTO.html":{},"classes/PaginatorClass.html":{},"injectables/PaginatorMiddleware.html":{},"modules/PipesModule.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["files",{"_index":641,"title":{},"body":{"index.html":{}}}],["filtros",{"_index":488,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["findone(loginuserdto",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["findoneoptions",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["first",{"_index":706,"title":{},"body":{"index.html":{}}}],["firstname",{"_index":27,"title":{},"body":{"interfaces/Address.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"interfaces/JwtPayload.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"miscellaneous/variables.html":{}}}],["fixes",{"_index":763,"title":{},"body":{"index.html":{}}}],["folder",{"_index":639,"title":{},"body":{"index.html":{}}}],["following",{"_index":666,"title":{},"body":{"index.html":{}}}],["fork/clone",{"_index":631,"title":{},"body":{"index.html":{}}}],["format",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["formatteddate",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["forroutes",{"_index":204,"title":{},"body":{"modules/AuthModule.html":{}}}],["found",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["function",{"_index":379,"title":{},"body":{"injectables/PaginatorMiddleware.html":{},"coverage.html":{},"index.html":{}}}],["functions",{"_index":613,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["future",{"_index":724,"title":{},"body":{"index.html":{}}}],["gender",{"_index":31,"title":{},"body":{"interfaces/Address.html":{},"classes/CreateUserDTO.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":705,"title":{},"body":{"index.html":{}}}],["gets",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":616,"title":{"index.html":{}},"body":{"index.html":{}}}],["getusers",{"_index":468,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getusers(page",{"_index":500,"title":{},"body":{"injectables/UsersService.html":{}}}],["getusers(req",{"_index":469,"title":{},"body":{"controllers/UsersController.html":{}}}],["go",{"_index":629,"title":{},"body":{"index.html":{}}}],["graph",{"_index":789,"title":{},"body":{"modules.html":{}}}],["handle",{"_index":346,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["hear",{"_index":668,"title":{},"body":{"index.html":{}}}],["helmet",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["helping",{"_index":742,"title":{},"body":{"index.html":{}}}],["here",{"_index":694,"title":{},"body":{"index.html":{}}}],["host",{"_index":563,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["hostname",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host}:${port",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://${process.env.host",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpexception",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidationPipe.html":{}}}],["httpstatus",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidationPipe.html":{}}}],["httpstatus.bad_request",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidationPipe.html":{}}}],["httpstatus.not_found",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":419,"title":{},"body":{"classes/UserDTO.html":{}}}],["identifier",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["implementation",{"_index":752,"title":{},"body":{"index.html":{}}}],["implemented",{"_index":735,"title":{},"body":{"index.html":{}}}],["implements",{"_index":202,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PaginatorMiddleware.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"injectables/ValidationPipe.html":{}}}],["import",{"_index":18,"title":{},"body":{"interfaces/Address.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PaginatorMiddleware.html":{},"modules/PipesModule.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["important",{"_index":695,"title":{},"body":{"index.html":{}}}],["imports",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["improve",{"_index":717,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Address.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"interfaces/IResponse.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginUserDTO.html":{},"classes/PaginatorClass.html":{},"injectables/PaginatorMiddleware.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":642,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Address.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"interfaces/IResponse.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginUserDTO.html":{},"classes/PaginatorClass.html":{},"injectables/PaginatorMiddleware.html":{},"modules/PipesModule.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["infomessage",{"_index":390,"title":{},"body":{"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{}}}],["informed",{"_index":704,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":208,"title":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PaginatorMiddleware.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PaginatorMiddleware.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["injectables",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PaginatorMiddleware.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"overview.html":{}}}],["injectmodel",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["injectmodel('users",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["input",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidationPipe.html":{}}}],["inside",{"_index":700,"title":{},"body":{"index.html":{}}}],["installation",{"_index":626,"title":{},"body":{"index.html":{}}}],["instead",{"_index":688,"title":{},"body":{"index.html":{}}}],["instruction",{"_index":721,"title":{},"body":{"index.html":{}}}],["integralclick",{"_index":620,"title":{},"body":{"index.html":{}}}],["integration",{"_index":744,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":331,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["intercept(context",{"_index":332,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interceptor",{"_index":755,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Address.html":{},"interfaces/IResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/Users.html":{}},"body":{"interfaces/Address.html":{},"interfaces/IResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/Users.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Address.html":{},"interfaces/IResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/Users.html":{},"index.html":{},"overview.html":{}}}],["interfaces/jwt",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["interfaces/response.interface",{"_index":397,"title":{},"body":{"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{}}}],["interfaces/users.interface",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["introduction",{"_index":621,"title":{},"body":{"index.html":{}}}],["iresponse",{"_index":119,"title":{"interfaces/IResponse.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/IResponse.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["isdate",{"_index":308,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isemail",{"_index":296,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isnan(object.limit",{"_index":370,"title":{},"body":{"classes/PaginatorClass.html":{}}}],["isnan(object.page",{"_index":367,"title":{},"body":{"classes/PaginatorClass.html":{}}}],["isoptional",{"_index":307,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isstring",{"_index":154,"title":{},"body":{"classes/AuthCredentialsDto.html":{},"classes/CreateUserDTO.html":{}}}],["isstring()@isoptional",{"_index":298,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isstring()@minlength(4)@maxlength(20",{"_index":152,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["isstring()@minlength(5",{"_index":302,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isstring()@minlength(8)@maxlength(20)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":146,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["item",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["json.parse(json.stringify(data",{"_index":414,"title":{},"body":{"classes/ResponseSuccess.html":{}}}],["json.stringify(data",{"_index":404,"title":{},"body":{"classes/ResponseError.html":{}}}],["json.stringify(offuscaterequest",{"_index":417,"title":{},"body":{"classes/ResponseSuccess.html":{}}}],["jsonwebtoken",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":196,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["jwt.verify(token",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt/jwt.strategy",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt_secret",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtfromrequest",{"_index":326,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":197,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":233,"title":{"interfaces/JwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtservice",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":166,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["lastloginat",{"_index":37,"title":{},"body":{"interfaces/Address.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"miscellaneous/variables.html":{}}}],["lastname",{"_index":28,"title":{},"body":{"interfaces/Address.html":{},"classes/CreateUserDTO.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["libraries",{"_index":778,"title":{},"body":{"index.html":{}}}],["library",{"_index":743,"title":{},"body":{"index.html":{}}}],["licence",{"_index":712,"title":{},"body":{"index.html":{}}}],["limit",{"_index":356,"title":{},"body":{"classes/PaginatorClass.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["links",{"_index":780,"title":{},"body":{"index.html":{}}}],["list",{"_index":728,"title":{},"body":{"index.html":{}}}],["literal",{"_index":422,"title":{},"body":{"classes/UserDTO.html":{}}}],["local",{"_index":632,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loggin",{"_index":756,"title":{},"body":{"index.html":{}}}],["logginginterceptor",{"_index":329,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["loginuserdto",{"_index":93,"title":{"classes/LoginUserDTO.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginUserDTO.html":{},"coverage.html":{}}}],["loginuserdto.email",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginuserdto.password).digest('hex",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginuserdto.username",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["machine",{"_index":633,"title":{},"body":{"index.html":{}}}],["maintain",{"_index":701,"title":{},"body":{"index.html":{}}}],["make",{"_index":679,"title":{},"body":{"index.html":{}}}],["man",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manually",{"_index":709,"title":{},"body":{"index.html":{}}}],["matches",{"_index":157,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["matching",{"_index":42,"title":{},"body":{"interfaces/Address.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"interfaces/IResponse.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginUserDTO.html":{},"classes/PaginatorClass.html":{},"injectables/PaginatorMiddleware.html":{},"modules/PipesModule.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":156,"title":{},"body":{"classes/AuthCredentialsDto.html":{},"classes/CreateUserDTO.html":{}}}],["maxlength(20",{"_index":160,"title":{},"body":{"classes/AuthCredentialsDto.html":{},"classes/CreateUserDTO.html":{}}}],["measures",{"_index":733,"title":{},"body":{"index.html":{}}}],["message",{"_index":149,"title":{},"body":{"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"interfaces/IResponse.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":522,"title":{},"body":{"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["metatype",{"_index":520,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["method",{"_index":206,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["methods",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PaginatorMiddleware.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["middleware",{"_index":476,"title":{},"body":{"controllers/UsersController.html":{}}}],["middlewareconsumer",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{}}}],["minlength",{"_index":155,"title":{},"body":{"classes/AuthCredentialsDto.html":{},"classes/CreateUserDTO.html":{}}}],["minlength(3",{"_index":309,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["minlength(3)@maxlength(20",{"_index":305,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["minlength(4",{"_index":159,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["minlength(5",{"_index":310,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["minlength(8",{"_index":161,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["miscellaneous",{"_index":612,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":646,"title":{},"body":{"index.html":{}}}],["model",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["modes",{"_index":737,"title":{},"body":{"index.html":{}}}],["modify",{"_index":716,"title":{},"body":{"index.html":{}}}],["module",{"_index":44,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PipesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PipesModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":46,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PipesModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["moment(date",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["mongo_uri",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":20,"title":{},"body":{"interfaces/Address.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoosecoremodule",{"_index":747,"title":{},"body":{"index.html":{}}}],["mongoosemodule",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["mongoosemodule.forfeature",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":650,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/PaginatorClass.html":{},"injectables/PaginatorMiddleware.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["necesary",{"_index":726,"title":{},"body":{"index.html":{}}}],["need",{"_index":714,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":339,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["nestjs/common",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PaginatorMiddleware.html":{},"modules/PipesModule.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["nestjs/common/exceptions/http.exception",{"_index":528,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["nestjs/core",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":380,"title":{},"body":{"injectables/PaginatorMiddleware.html":{}}}],["nestmodule",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{}}}],["neverworthless",{"_index":647,"title":{},"body":{"index.html":{}}}],["new",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PaginatorMiddleware.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":334,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/PaginatorMiddleware.html":{}}}],["no_defined",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["note",{"_index":691,"title":{},"body":{"index.html":{}}}],["notificated",{"_index":703,"title":{},"body":{"index.html":{}}}],["notlog",{"_index":406,"title":{},"body":{"classes/ResponseSuccess.html":{}}}],["now",{"_index":344,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["now}ms",{"_index":349,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["npm",{"_index":636,"title":{},"body":{"index.html":{}}}],["null",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":361,"title":{},"body":{"classes/PaginatorClass.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["number(object.limit",{"_index":372,"title":{},"body":{"classes/PaginatorClass.html":{}}}],["number(object.page",{"_index":369,"title":{},"body":{"classes/PaginatorClass.html":{}}}],["o",{"_index":477,"title":{},"body":{"controllers/UsersController.html":{}}}],["object",{"_index":360,"title":{},"body":{"classes/PaginatorClass.html":{},"classes/UserDTO.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["object._id",{"_index":438,"title":{},"body":{"classes/UserDTO.html":{}}}],["object.accesstoken",{"_index":466,"title":{},"body":{"classes/UserDTO.html":{}}}],["object.address",{"_index":455,"title":{},"body":{"classes/UserDTO.html":{}}}],["object.avatar",{"_index":458,"title":{},"body":{"classes/UserDTO.html":{}}}],["object.birth",{"_index":452,"title":{},"body":{"classes/UserDTO.html":{}}}],["object.createdat",{"_index":460,"title":{},"body":{"classes/UserDTO.html":{}}}],["object.email",{"_index":446,"title":{},"body":{"classes/UserDTO.html":{}}}],["object.entries(el.constraints).foreach(constraint",{"_index":538,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["object.firstname",{"_index":440,"title":{},"body":{"classes/UserDTO.html":{}}}],["object.gender",{"_index":454,"title":{},"body":{"classes/UserDTO.html":{}}}],["object.lastlogin",{"_index":464,"title":{},"body":{"classes/UserDTO.html":{}}}],["object.lastname",{"_index":442,"title":{},"body":{"classes/UserDTO.html":{}}}],["object.phone",{"_index":448,"title":{},"body":{"classes/UserDTO.html":{}}}],["object.role",{"_index":450,"title":{},"body":{"classes/UserDTO.html":{}}}],["object.updatedat",{"_index":462,"title":{},"body":{"classes/UserDTO.html":{}}}],["object.username",{"_index":444,"title":{},"body":{"classes/UserDTO.html":{}}}],["objectid",{"_index":759,"title":{},"body":{"index.html":{}}}],["observable",{"_index":338,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["offuscaterequest",{"_index":413,"title":{},"body":{"classes/ResponseSuccess.html":{}}}],["offuscaterequest.token",{"_index":415,"title":{},"body":{"classes/ResponseSuccess.html":{}}}],["one",{"_index":671,"title":{},"body":{"index.html":{}}}],["opt",{"_index":771,"title":{},"body":{"index.html":{}}}],["optimization",{"_index":745,"title":{},"body":{"index.html":{}}}],["option",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/PaginatorClass.html":{},"injectables/PaginatorMiddleware.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["options",{"_index":503,"title":{},"body":{"injectables/UsersService.html":{}}}],["ordering",{"_index":489,"title":{},"body":{"controllers/UsersController.html":{}}}],["out",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":511,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["overview",{"_index":791,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":571,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":357,"title":{},"body":{"classes/PaginatorClass.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["paginador",{"_index":482,"title":{},"body":{"controllers/UsersController.html":{}}}],["paginadores/filtros/ordering/etc",{"_index":481,"title":{},"body":{"controllers/UsersController.html":{}}}],["paginate",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["paginatemodel",{"_index":498,"title":{},"body":{"injectables/UsersService.html":{}}}],["paginator",{"_index":382,"title":{},"body":{"injectables/PaginatorMiddleware.html":{}}}],["paginatorclass",{"_index":354,"title":{"classes/PaginatorClass.html":{}},"body":{"classes/PaginatorClass.html":{},"injectables/PaginatorMiddleware.html":{},"coverage.html":{}}}],["paginatorclass(req.query",{"_index":383,"title":{},"body":{"injectables/PaginatorMiddleware.html":{}}}],["paginatormiddleware",{"_index":190,"title":{"injectables/PaginatorMiddleware.html":{}},"body":{"modules/AuthModule.html":{},"injectables/PaginatorMiddleware.html":{},"coverage.html":{}}}],["para",{"_index":479,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/PaginatorClass.html":{},"injectables/PaginatorMiddleware.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["passport",{"_index":323,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["passportmodule",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":320,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":324,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":25,"title":{},"body":{"interfaces/Address.html":{},"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":205,"title":{},"body":{"modules/AuthModule.html":{}}}],["payload",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["payload.interface",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface.ts",{"_index":315,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["pendiente",{"_index":486,"title":{},"body":{"controllers/UsersController.html":{}}}],["phone",{"_index":29,"title":{},"body":{"interfaces/Address.html":{},"classes/CreateUserDTO.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":347,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["pipes",{"_index":758,"title":{},"body":{"index.html":{}}}],["pipesmodule",{"_index":71,"title":{"modules/PipesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PipesModule.html":{},"modules.html":{}}}],["pipetransform",{"_index":525,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass",{"_index":526,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass(metatype",{"_index":532,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["please",{"_index":690,"title":{},"body":{"index.html":{}}}],["port",{"_index":566,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signin",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["postman",{"_index":630,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["process.env.mongo_uri}${(process.env.db_database",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.server_port",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":644,"title":{},"body":{"index.html":{}}}],["production.yml",{"_index":663,"title":{},"body":{"index.html":{}}}],["project",{"_index":624,"title":{},"body":{"index.html":{}}}],["promise",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{}}}],["prop",{"_index":536,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["proper",{"_index":725,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/Address.html":{},"classes/AuthCredentialsDto.html":{},"classes/CreateUserDTO.html":{},"interfaces/IResponse.html":{},"interfaces/JwtPayload.html":{},"classes/LoginUserDTO.html":{},"classes/PaginatorClass.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["propietary",{"_index":713,"title":{},"body":{"index.html":{}}}],["provided",{"_index":722,"title":{},"body":{"index.html":{}}}],["providers",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["public",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{}}}],["purposes",{"_index":627,"title":{},"body":{"index.html":{}}}],["rate",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["readme",{"_index":622,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDTO.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["real",{"_index":684,"title":{},"body":{"index.html":{}}}],["realtime",{"_index":670,"title":{},"body":{"index.html":{}}}],["recovery",{"_index":773,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["registration",{"_index":772,"title":{},"body":{"index.html":{}}}],["registry",{"_index":768,"title":{},"body":{"index.html":{}}}],["remember",{"_index":697,"title":{},"body":{"index.html":{}}}],["req",{"_index":378,"title":{},"body":{"injectables/PaginatorMiddleware.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["req.headers.authorization",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.paginator",{"_index":384,"title":{},"body":{"injectables/PaginatorMiddleware.html":{}}}],["req.paginator.limit",{"_index":492,"title":{},"body":{"controllers/UsersController.html":{}}}],["req.paginator.page",{"_index":491,"title":{},"body":{"controllers/UsersController.html":{}}}],["req.user",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.user[data",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestmethod",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{}}}],["requestmethod.get",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{}}}],["requests",{"_index":757,"title":{},"body":{"index.html":{}}}],["require('moment",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["required",{"_index":680,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":376,"title":{},"body":{"injectables/PaginatorMiddleware.html":{}}}],["reset",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["response",{"_index":403,"title":{},"body":{"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"index.html":{}}}],["responseerror",{"_index":117,"title":{"classes/ResponseError.html":{}},"body":{"controllers/AuthController.html":{},"classes/ResponseError.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["responseerror('common.error",{"_index":495,"title":{},"body":{"controllers/UsersController.html":{}}}],["responseerror('login.error.generic_error",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["responseerror('registration.error.generic_error",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsesuccess",{"_index":114,"title":{"classes/ResponseSuccess.html":{}},"body":{"controllers/AuthController.html":{},"classes/ResponseSuccess.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["responsesuccess('common.success",{"_index":494,"title":{},"body":{"controllers/UsersController.html":{}}}],["responsesuccess('login.success",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsesuccess('registration.success",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["result",{"_index":41,"title":{},"body":{"interfaces/Address.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"interfaces/IResponse.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginUserDTO.html":{},"classes/PaginatorClass.html":{},"injectables/PaginatorMiddleware.html":{},"modules/PipesModule.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.docs",{"_index":506,"title":{},"body":{"injectables/UsersService.html":{}}}],["result[prop",{"_index":539,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["results",{"_index":43,"title":{},"body":{"interfaces/Address.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"interfaces/IResponse.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginUserDTO.html":{},"classes/PaginatorClass.html":{},"injectables/PaginatorMiddleware.html":{},"modules/PipesModule.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/PaginatorClass.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PaginatorMiddleware.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["rgpd",{"_index":769,"title":{},"body":{"index.html":{}}}],["rimraf",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":30,"title":{},"body":{"interfaces/Address.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"miscellaneous/variables.html":{}}}],["roles_validos",{"_index":559,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":659,"title":{},"body":{"index.html":{}}}],["run",{"_index":634,"title":{},"body":{"index.html":{}}}],["running",{"_index":643,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":340,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":342,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["same",{"_index":675,"title":{},"body":{"index.html":{}}}],["schema",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["schemas/user.schema",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{}}}],["secret",{"_index":198,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":328,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":784,"title":{},"body":{"index.html":{}}}],["securely",{"_index":651,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["security",{"_index":732,"title":{},"body":{"index.html":{}}}],["server",{"_index":619,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["server's",{"_index":654,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["server_url",{"_index":567,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["setup",{"_index":766,"title":{},"body":{"index.html":{}}}],["sha1",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sha1((process.env.jwt_secret",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shared/dto/response",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["shared/interfaces/response.interface",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["shared/middleware/paginator.middleware",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{}}}],["shared/pipes/pipes.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["short",{"_index":723,"title":{},"body":{"index.html":{}}}],["signin",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["signin(loginuserdto",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signoptions",{"_index":199,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["signup(createuserdto",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(dto",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["simply",{"_index":686,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Address.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"interfaces/IResponse.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginUserDTO.html":{},"classes/PaginatorClass.html":{},"injectables/PaginatorMiddleware.html":{},"modules/PipesModule.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["src/.../constants.ts",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":614,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.decorator.ts",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:17",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:29",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.module.ts:39",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:44",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:57",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:76",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/auth",{"_index":144,"title":{},"body":{"classes/AuthCredentialsDto.html":{},"coverage.html":{}}}],["src/auth/dto/create",{"_index":293,"title":{},"body":{"classes/CreateUserDTO.html":{},"coverage.html":{}}}],["src/auth/dto/login",{"_index":350,"title":{},"body":{"classes/LoginUserDTO.html":{},"coverage.html":{}}}],["src/auth/dto/user.dto.ts",{"_index":418,"title":{},"body":{"classes/UserDTO.html":{},"coverage.html":{}}}],["src/auth/dto/user.dto.ts:28",{"_index":436,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/auth/dto/user.dto.ts:29",{"_index":432,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/auth/dto/user.dto.ts:30",{"_index":427,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/auth/dto/user.dto.ts:31",{"_index":428,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/auth/dto/user.dto.ts:32",{"_index":431,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/auth/dto/user.dto.ts:33",{"_index":433,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/auth/dto/user.dto.ts:34",{"_index":434,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/auth/dto/user.dto.ts:35",{"_index":429,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/auth/dto/user.dto.ts:36",{"_index":423,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/auth/dto/user.dto.ts:37",{"_index":425,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/auth/dto/user.dto.ts:38",{"_index":424,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/auth/dto/user.dto.ts:4",{"_index":430,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/auth/dto/user.dto.ts:5",{"_index":421,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/auth/dto/user.dto.ts:6",{"_index":426,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/auth/dto/user.dto.ts:7",{"_index":435,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/auth/dto/user.dto.ts:8",{"_index":420,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/auth/interfaces/jwt",{"_index":314,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/auth/interfaces/users.interface.ts",{"_index":6,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Users.html":{},"coverage.html":{}}}],["src/auth/jwt/jwt.strategy.ts",{"_index":316,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt/jwt.strategy.ts:11",{"_index":317,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt/jwt.strategy.ts:21",{"_index":319,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/schemas/user.schema.ts",{"_index":556,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/user.decorator.ts",{"_index":560,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/users.controller.ts",{"_index":467,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/auth/users.controller.ts:18",{"_index":471,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/auth/users.service.ts",{"_index":496,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/auth/users.service.ts:11",{"_index":499,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/auth/users.service.ts:18",{"_index":501,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/config/constants.ts",{"_index":562,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":568,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/classes/paginator.class.ts",{"_index":355,"title":{},"body":{"classes/PaginatorClass.html":{},"coverage.html":{}}}],["src/shared/classes/paginator.class.ts:3",{"_index":365,"title":{},"body":{"classes/PaginatorClass.html":{}}}],["src/shared/classes/paginator.class.ts:4",{"_index":359,"title":{},"body":{"classes/PaginatorClass.html":{}}}],["src/shared/dto/response",{"_index":386,"title":{},"body":{"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"coverage.html":{}}}],["src/shared/interceptors/loggin.interceptor.ts",{"_index":330,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["src/shared/interceptors/loggin.interceptor.ts:8",{"_index":336,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/shared/interfaces/response.interface.ts",{"_index":311,"title":{},"body":{"interfaces/IResponse.html":{},"coverage.html":{}}}],["src/shared/middleware/paginator.middleware.ts",{"_index":373,"title":{},"body":{"injectables/PaginatorMiddleware.html":{},"coverage.html":{}}}],["src/shared/middleware/paginator.middleware.ts:6",{"_index":377,"title":{},"body":{"injectables/PaginatorMiddleware.html":{}}}],["src/shared/pipes/pipes.module.ts",{"_index":385,"title":{},"body":{"modules/PipesModule.html":{}}}],["src/shared/pipes/validation.pipe.ts",{"_index":512,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["src/shared/pipes/validation.pipe.ts:26",{"_index":517,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/shared/pipes/validation.pipe.ts:37",{"_index":519,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/shared/pipes/validation.pipe.ts:8",{"_index":524,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["start:dev",{"_index":677,"title":{},"body":{"index.html":{}}}],["start:prod",{"_index":687,"title":{},"body":{"index.html":{}}}],["started",{"_index":617,"title":{"index.html":{}},"body":{}}],["state",{"_index":13,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Users.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["steps",{"_index":696,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":321,"title":{},"body":{"injectables/JwtStrategy.html":{},"index.html":{}}}],["strict",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":15,"title":{},"body":{"interfaces/Address.html":{},"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"interfaces/IResponse.html":{},"interfaces/JwtPayload.html":{},"classes/LoginUserDTO.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["string).split",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string).split(':')[0",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["string).split(':')[1",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["submitted",{"_index":530,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["success",{"_index":313,"title":{},"body":{"interfaces/IResponse.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{}}}],["success.dto",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["success.dto.ts",{"_index":405,"title":{},"body":{"classes/ResponseSuccess.html":{},"coverage.html":{}}}],["success.dto.ts:18",{"_index":411,"title":{},"body":{"classes/ResponseSuccess.html":{}}}],["success.dto.ts:19",{"_index":408,"title":{},"body":{"classes/ResponseSuccess.html":{}}}],["success.dto.ts:20",{"_index":410,"title":{},"body":{"classes/ResponseSuccess.html":{}}}],["success.dto.ts:21",{"_index":409,"title":{},"body":{"classes/ResponseSuccess.html":{}}}],["success.dto.ts:22",{"_index":412,"title":{},"body":{"classes/ResponseSuccess.html":{}}}],["success.dto.ts:5",{"_index":407,"title":{},"body":{"classes/ResponseSuccess.html":{}}}],["super",{"_index":325,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":786,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":708,"title":{},"body":{"index.html":{}}}],["svg",{"_index":787,"title":{},"body":{"modules.html":{}}}],["table",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":569,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":783,"title":{},"body":{"index.html":{}}}],["tap",{"_index":341,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["team",{"_index":702,"title":{},"body":{"index.html":{}}}],["template",{"_index":661,"title":{},"body":{"index.html":{}}}],["testing",{"_index":775,"title":{},"body":{"index.html":{}}}],["there's",{"_index":638,"title":{},"body":{"index.html":{}}}],["this.accesstoken",{"_index":465,"title":{},"body":{"classes/UserDTO.html":{}}}],["this.address",{"_index":456,"title":{},"body":{"classes/UserDTO.html":{}}}],["this.authservice.signin(loginuserdto",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(createuserdto",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.avatar",{"_index":457,"title":{},"body":{"classes/UserDTO.html":{}}}],["this.birth",{"_index":451,"title":{},"body":{"classes/UserDTO.html":{}}}],["this.builderror(errors",{"_index":534,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["this.createdat",{"_index":459,"title":{},"body":{"classes/UserDTO.html":{}}}],["this.data",{"_index":400,"title":{},"body":{"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{}}}],["this.email",{"_index":445,"title":{},"body":{"classes/UserDTO.html":{}}}],["this.findone(loginuserdto",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.firstname",{"_index":439,"title":{},"body":{"classes/UserDTO.html":{}}}],["this.gender",{"_index":453,"title":{},"body":{"classes/UserDTO.html":{}}}],["this.id",{"_index":437,"title":{},"body":{"classes/UserDTO.html":{}}}],["this.jwtservice.sign(payload",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.lastloginat",{"_index":463,"title":{},"body":{"classes/UserDTO.html":{}}}],["this.lastname",{"_index":441,"title":{},"body":{"classes/UserDTO.html":{}}}],["this.limit",{"_index":371,"title":{},"body":{"classes/PaginatorClass.html":{}}}],["this.message",{"_index":399,"title":{},"body":{"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{}}}],["this.page",{"_index":368,"title":{},"body":{"classes/PaginatorClass.html":{}}}],["this.phone",{"_index":447,"title":{},"body":{"classes/UserDTO.html":{}}}],["this.role",{"_index":449,"title":{},"body":{"classes/UserDTO.html":{}}}],["this.success",{"_index":398,"title":{},"body":{"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{}}}],["this.todate(date",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tovalidate(metatype",{"_index":531,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["this.updatedat",{"_index":461,"title":{},"body":{"classes/UserDTO.html":{}}}],["this.usermodel(dto",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usermodel.findone",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.usermodel.findone(findoneoptions",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usermodelpag.paginate",{"_index":504,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.username",{"_index":443,"title":{},"body":{"classes/UserDTO.html":{}}}],["this.users",{"_index":502,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.push(user",{"_index":510,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.getusers(page",{"_index":493,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":676,"title":{},"body":{"index.html":{}}}],["todate",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["todate(date",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["todo",{"_index":474,"title":{},"body":{"controllers/UsersController.html":{}}}],["todo's",{"_index":764,"title":{},"body":{"index.html":{}}}],["token",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token[1",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tools",{"_index":727,"title":{},"body":{"index.html":{}}}],["tovalidate",{"_index":514,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["tovalidate(metatype",{"_index":518,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform",{"_index":515,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform(value",{"_index":521,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transformer",{"_index":527,"title":{},"body":{"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["true",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"classes/ResponseSuccess.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"classes/ResponseSuccess.html":{},"controllers/UsersController.html":{}}}],["type",{"_index":16,"title":{},"body":{"interfaces/Address.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"interfaces/IResponse.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginUserDTO.html":{},"classes/PaginatorClass.html":{},"injectables/PaginatorMiddleware.html":{},"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":542,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["types.find((type",{"_index":544,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["typescript",{"_index":741,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["uncoding",{"_index":753,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserDTO.html":{}}}],["under",{"_index":711,"title":{},"body":{"index.html":{}}}],["unique",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["update",{"_index":748,"title":{},"body":{"index.html":{}}}],["updatedat",{"_index":36,"title":{},"body":{"interfaces/Address.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"miscellaneous/variables.html":{}}}],["uri",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":374,"title":{},"body":{"injectables/PaginatorMiddleware.html":{},"index.html":{}}}],["use(req",{"_index":375,"title":{},"body":{"injectables/PaginatorMiddleware.html":{}}}],["usecreateindex",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["usefindandmodify",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["useglobalpipes",{"_index":761,"title":{},"body":{"index.html":{}}}],["usenewurlparser",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user('email",{"_index":490,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.decorator",{"_index":472,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.dto",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.dto.ts",{"_index":294,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/LoginUserDTO.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":303,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:14",{"_index":299,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:18",{"_index":301,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:21",{"_index":297,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:25",{"_index":304,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:29",{"_index":300,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:3",{"_index":353,"title":{},"body":{"classes/LoginUserDTO.html":{}}}],["user.dto.ts:32",{"_index":295,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:4",{"_index":351,"title":{},"body":{"classes/LoginUserDTO.html":{}}}],["user.dto.ts:5",{"_index":352,"title":{},"body":{"classes/LoginUserDTO.html":{}}}],["user.dto.ts:6",{"_index":306,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.password",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_created",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_created.save",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_exist",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_role",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userdto",{"_index":121,"title":{"classes/UserDTO.html":{}},"body":{"controllers/AuthController.html":{},"classes/UserDTO.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userdto(doc",{"_index":509,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdto(item",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["usermodel",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["usermodelpag",{"_index":497,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":24,"title":{},"body":{"interfaces/Address.html":{},"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDTO.html":{},"classes/UserDTO.html":{},"interfaces/Users.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":22,"title":{"interfaces/Users.html":{}},"body":{"interfaces/Address.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["users.controller",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{}}}],["users.service",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{},"controllers/UsersController.html":{}}}],["userschema",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":169,"title":{"controllers/UsersController.html":{}},"body":{"modules/AuthModule.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["usersservice",{"_index":167,"title":{"injectables/UsersService.html":{}},"body":{"modules/AuthModule.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["utils",{"_index":777,"title":{},"body":{"index.html":{}}}],["v0.1.2",{"_index":730,"title":{},"body":{"index.html":{}}}],["v0.1.3",{"_index":736,"title":{},"body":{"index.html":{}}}],["v0.1.4",{"_index":746,"title":{},"body":{"index.html":{}}}],["v0.2",{"_index":750,"title":{},"body":{"index.html":{}}}],["v2",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["valid",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ValidationPipe.html":{}}}],["validate(dto",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate(object",{"_index":533,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validate(payload",{"_index":318,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validation",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidationPipe.html":{},"index.html":{}}}],["validationpipe",{"_index":109,"title":{"injectables/ValidationPipe.html":{}},"body":{"controllers/AuthController.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validator",{"_index":158,"title":{},"body":{"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["value",{"_index":363,"title":{},"body":{"classes/PaginatorClass.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":557,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":656,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{},"injectables/PaginatorMiddleware.html":{}}}],["want",{"_index":685,"title":{},"body":{"index.html":{}}}],["weak",{"_index":150,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["well",{"_index":673,"title":{},"body":{"index.html":{}}}],["whatever",{"_index":699,"title":{},"body":{"index.html":{}}}],["woman",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["work",{"_index":718,"title":{},"body":{"index.html":{}}}],["y",{"_index":483,"title":{},"body":{"controllers/UsersController.html":{}}}],["yaml",{"_index":640,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["yarn",{"_index":678,"title":{},"body":{"index.html":{}}}],["yes",{"_index":391,"title":{},"body":{"classes/ResponseError.html":{},"classes/ResponseSuccess.html":{}}}],["z",{"_index":148,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["z])(?=.*[a",{"_index":147,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["zip",{"_index":14,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Users.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/users.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        addr1\n                                \n                                \n                                        addr2\n                                \n                                \n                                        city\n                                \n                                \n                                        country\n                                \n                                \n                                        state\n                                \n                                \n                                        zip\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addr1\n                                    \n                                \n                                \n                                    \n                                        addr1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addr2\n                                    \n                                \n                                \n                                    \n                                        addr2:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zip\n                                    \n                                \n                                \n                                    \n                                        zip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\n\ninterface Address {\n    addr1: string;\n    addr2: string;\n    city: string;\n    state: string;\n    country: string;\n    zip: string;\n}\n\nexport interface Users extends Document {\n    username: string;\n    password: string;\n    email: string;\n    firstName: string;\n    lastName: string;\n    phone: string;\n    role: string;\n    gender: string;\n    birth: Date;\n    address: Address;\n    avatar: string;\n    createdAt: Date;\n    updatedAt: Date;\n    lastLoginAt: Date;\n    deleted: boolean;\n    deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { MONGO_URI } from './config/constants';\nimport { AuthModule } from './auth/auth.module';\nimport { PipesModule } from './shared/pipes/pipes.module';\n\n\n@Module({\n  imports: [\n    MongooseModule.forRootAsync({\n      useFactory: () => ({\n        uri: MONGO_URI,\n        useCreateIndex: true,\n        useNewUrlParser: true,\n        useFindAndModify: false,\n      }),\n    }),\n    AuthModule,\n    PipesModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            signIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(loginUserDTO: LoginUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDTO\n                                    \n                                                LoginUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            signUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(createUserDto: CreateUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, ValidationPipe, Get } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { CreateUserDTO } from './dto/create-user.dto';\nimport { ResponseSuccess } from '../shared/dto/response-success.dto';\nimport { ResponseError } from '../shared/dto/response-error.dto';\nimport { IResponse } from '../shared/interfaces/response.interface';\nimport { UserDTO } from './dto/user.dto';\nimport { LoginUserDTO } from './dto/login-user.dto';\n\n@Controller('auth')\nexport class AuthController {\n    constructor(\n        private authService: AuthService,\n    ) { }\n\n    @Post('signup')\n    async signUp(\n        @Body() createUserDto: CreateUserDTO,\n    ): Promise {\n        try {\n            const item = await this.authService.signUp(createUserDto);\n            return new ResponseSuccess('REGISTRATION.SUCCESS', new UserDTO(item));\n        } catch (error) {\n            return new ResponseError('REGISTRATION.ERROR.GENERIC_ERROR', error);\n        }\n    }\n\n    @Post('signin')\n    async signIn(\n        @Body() loginUserDTO: LoginUserDTO,\n    ): Promise {\n        try {\n            const item = await this.authService.signIn(loginUserDTO);\n            return new ResponseSuccess('LOGIN.SUCCESS', new UserDTO(item));\n        } catch (error) {\n            return new ResponseError('LOGIN.ERROR.GENERIC_ERROR', error);\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthCredentialsDto.html":{"url":"classes/AuthCredentialsDto.html","title":"class - AuthCredentialsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthCredentialsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth-credentials.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@MinLength(8)@MaxLength(20)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'password too weak'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/auth-credentials.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@MinLength(4)@MaxLength(20)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/auth-credentials.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, MinLength, MaxLength, Matches } from 'class-validator';\n\nexport class AuthCredentialsDto {\n    @IsString()\n    @MinLength(4)\n    @MaxLength(20)\n    username: string;\n\n    @IsString()\n    @MinLength(8)\n    @MaxLength(20)\n    @Matches(\n        /((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\n        { message: 'password too weak' },\n    )\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.module.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, NestModule, MiddlewareConsumer, RequestMethod } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './jwt/jwt.strategy';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserSchema } from './schemas/user.schema';\nimport { JWT_SECRET } from '../config/constants';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\nimport { PaginatorMiddleware } from '../shared/middleware/paginator.middleware';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: 'Users', schema: UserSchema },\n    ]),\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: JWT_SECRET,\n      signOptions: {\n        expiresIn: 3600,\n      },\n    }),\n  ],\n  controllers: [AuthController, UsersController],\n  providers: [\n    AuthService,\n    JwtStrategy,\n    UsersService,\n  ],\n  exports: [\n    JwtStrategy,\n    PassportModule,\n  ],\n})\nexport class AuthModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(PaginatorMiddleware)\n      .forRoutes(\n        { path: 'users', method: RequestMethod.GET },\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signUp\n                            \n                            \n                                    Private\n                                    Async\n                                toDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(loginUserDto: LoginUserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDto\n                                    \n                                                LoginUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            signIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(loginUserDto: LoginUserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDto\n                                    \n                                                LoginUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            signUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(dto: CreateUserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            toDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toDate(date: string, dateFormat: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dateFormat\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException, BadRequestException, HttpException, HttpStatus } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { AuthCredentialsDto } from './dto/auth-credentials.dto';\nimport { JwtPayload } from './interfaces/jwt-payload.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Users } from './interfaces/users.interface';\nimport { CreateUserDTO } from './dto/create-user.dto';\nimport moment = require('moment');\nimport { validate } from 'class-validator';\nimport * as crypto from 'crypto';\nimport { LoginUserDTO } from './dto/login-user.dto';\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        @InjectModel('Users') private readonly userModel: Model,\n        private jwtService: JwtService,\n    ) { }\n\n    async signUp(dto: CreateUserDTO): Promise {\n        const USER_EXIST = await this.userModel.findOne({ $and: [{ deleted: false }, { $or: [{ username: dto.username }, { email: dto.email }] }] });\n        if (USER_EXIST) { throw new BadRequestException(`User already exists.`); }\n\n        const date = (dto.birth as string).split(':')[0];\n        const format = (dto.birth as string).split(':')[1];\n        const formattedDate = await this.toDate(date, format);\n\n        dto.birth = formattedDate;\n\n        const ERRORS = await validate(dto);\n        if (ERRORS.length > 0) {\n            const _ERROR = { username: 'User input is not valid.' };\n            throw new HttpException({ message: 'Input data validation failed', _ERROR }, HttpStatus.BAD_REQUEST);\n        } else {\n            const USER_CREATED = new this.userModel(dto);\n            const user: Users = await USER_CREATED.save()\n                .catch(error => { throw new BadRequestException(error); });\n            user.password = undefined;\n            return user;\n        }\n    }\n\n    async signIn(loginUserDto: LoginUserDTO) {\n\n        const _USER = await this.findOne(loginUserDto);\n        const errors = { User: 'Not found' };\n        if (!_USER) { throw new HttpException({ message: 'Authentication failed.', errors }, HttpStatus.NOT_FOUND); }\n\n        const { firstName, username, email } = _USER;\n        const payload: JwtPayload = { firstName, username, email };\n        const accessToken = await this.jwtService.sign(payload);\n        const user = { firstName, username, email, accessToken };\n        return user;\n    }\n\n    async findOne(loginUserDto: LoginUserDTO) {\n        const findOneOptions = {\n            $and: [{ deleted: false }, {\n                $or: [\n                    {\n                        email: loginUserDto.email,\n                        password: crypto.createHmac('sha256', loginUserDto.password).digest('hex'),\n                    },\n                    {\n                        username: loginUserDto.username,\n                        password: crypto.createHmac('sha256', loginUserDto.password).digest('hex'),\n                    },\n                ],\n            }],\n        };\n\n        return await this.userModel.findOne(findOneOptions);\n    }\n\n    private async toDate(date: string, dateFormat: string): Promise {\n        const formattedDate = await moment(date, dateFormat).toISOString();\n        return formattedDate;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDTO.html":{"url":"classes/CreateUserDTO.html","title":"class - CreateUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                birth\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                    Optional\n                                firstName\n                            \n                            \n                                    Readonly\n                                    Optional\n                                gender\n                            \n                            \n                                    Readonly\n                                    Optional\n                                lastName\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                    Optional\n                                phone\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/create-user.dto.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/create-user.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/create-user.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/create-user.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/create-user.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@MinLength(5)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/create-user.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/create-user.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(3)@MaxLength(20)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/create-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MinLength, MaxLength, IsEmail, IsString, IsOptional, IsDate } from 'class-validator';\n\nexport class CreateUserDTO {\n    @MinLength(3)\n    @MaxLength(20)\n    readonly username: string;\n\n    @IsString()\n    @MinLength(5)\n    readonly password: string;\n\n    @IsString()\n    @IsOptional()\n    readonly firstName?: string;\n\n    @IsString()\n    @IsOptional()\n    readonly lastName?: string;\n\n    @IsEmail()\n    readonly email: string;\n\n    @IsString()\n    @IsOptional()\n    readonly phone?: string;\n\n    @IsString()\n    @IsOptional()\n    readonly gender?: string;\n\n    @IsString()\n    birth: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResponse.html":{"url":"interfaces/IResponse.html","title":"interface - IResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/response.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        error\n                                \n                                \n                                        errorMessage\n                                \n                                \n                                        message\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessage\n                                    \n                                \n                                \n                                    \n                                        errorMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IResponse {\n    success: boolean;\n    message: string;\n    errorMessage: string;\n    data: any[];\n    error: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/jwt-payload.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n    firstName: string;\n    username: string;\n    email: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt/jwt.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt/jwt.strategy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport { Strategy, ExtractJwt } from 'passport-jwt';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtPayload } from '../interfaces/jwt-payload.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Users } from '../interfaces/users.interface';\nimport { JWT_SECRET } from '../../config/constants';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor(\n        @InjectModel('Users') private readonly userModel: Model,\n    ) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            secretOrKey: JWT_SECRET,\n        });\n    }\n\n    async validate(payload: JwtPayload): Promise {\n        const { username } = payload;\n        const user = await this.userModel.findOne({ username });\n\n        if (!user) {\n            throw new UnauthorizedException();\n        }\n\n        return user;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interceptors/loggin.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interceptors/loggin.interceptor.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n    intercept(context: ExecutionContext, next: CallHandler): Observable {\n        console.log('Before...');\n\n        const now = Date.now();\n        return next\n            .handle()\n            .pipe(\n                tap(() => console.log(`After... ${Date.now() - now}ms`)),\n            );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDTO.html":{"url":"classes/LoginUserDTO.html","title":"class - LoginUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/login-user.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/login-user.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/login-user.dto.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginUserDTO {\n    readonly username: string;\n    readonly email: string;\n    readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatorClass.html":{"url":"classes/PaginatorClass.html","title":"class - PaginatorClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatorClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/classes/paginator.class.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(object: any)\n                    \n                \n                        \n                            \n                                Defined in src/shared/classes/paginator.class.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        object\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/classes/paginator.class.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/classes/paginator.class.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PaginatorClass {\n    limit = 10;\n    page = 1;\n\n    constructor(object: any) {\n        if (!isNaN(object.page)) {\n            this.page = Number(object.page);\n        } else {\n            return;\n        }\n\n        if (!isNaN(object.limit)) {\n            this.limit = Number(object.limit);\n        } else {\n            return;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaginatorMiddleware.html":{"url":"injectables/PaginatorMiddleware.html","title":"injectable - PaginatorMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PaginatorMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/middleware/paginator.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            use\n                        \n                        \n                    \n                \n            \n            \n                \nuse(req: any, res: any, next: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/middleware/paginator.middleware.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { PaginatorClass } from '../classes/paginator.class';\n\n@Injectable()\nexport class PaginatorMiddleware implements NestMiddleware {\n  use(req: any, res: any, next: () => void) {\n    const paginator = new PaginatorClass(req.query);\n    req.paginator = paginator;\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PipesModule.html":{"url":"modules/PipesModule.html","title":"module - PipesModule","body":"\n                   \n\n\n\n\n    Modules\n    PipesModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/pipes/pipes.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class PipesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseError.html":{"url":"classes/ResponseError.html","title":"class - ResponseError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dto/response-error.dto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            IResponse\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                error\n                            \n                            \n                                errorMessage\n                            \n                            \n                                message\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(infoMessage: string, data?: any)\n                    \n                \n                        \n                            \n                                Defined in src/shared/dto/response-error.dto.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        infoMessage\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/dto/response-error.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/dto/response-error.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/dto/response-error.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/dto/response-error.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            success\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/dto/response-error.dto.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IResponse } from '../interfaces/response.interface';\n\nexport class ResponseError implements IResponse {\n    constructor(infoMessage: string, data?: any) {\n        this.success = false;\n        this.message = infoMessage;\n        this.data = data;\n        console.warn(new Date().toString() + ' - [Response]: ' + infoMessage + (data ? ' - ' + JSON.stringify(data) : ''));\n    }\n    message: string;\n    data: any[];\n    errorMessage: any;\n    error: any;\n    success: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseSuccess.html":{"url":"classes/ResponseSuccess.html","title":"class - ResponseSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dto/response-success.dto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            IResponse\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                error\n                            \n                            \n                                errorMessage\n                            \n                            \n                                message\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(infoMessage: string, data?: any, notLog?: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/shared/dto/response-success.dto.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        infoMessage\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        notLog\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/dto/response-success.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/dto/response-success.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/dto/response-success.dto.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/dto/response-success.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            success\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/dto/response-success.dto.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IResponse } from '../interfaces/response.interface';\n\nexport class ResponseSuccess implements IResponse {\n    constructor(infoMessage: string, data?: any, notLog?: boolean) {\n        this.success = true;\n        this.message = infoMessage;\n        this.data = data;\n        if (!notLog) {\n            try {\n                const offuscateRequest = JSON.parse(JSON.stringify(data));\n                if (offuscateRequest && offuscateRequest.token) { offuscateRequest.token = '*******'; }\n                console.log(new Date().toString() + ' - [Response]: ' + JSON.stringify(offuscateRequest));\n            } catch (error) { }\n        }\n    }\n    message: string;\n    data: any[];\n    errorMessage: any;\n    error: any;\n    success: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDTO.html":{"url":"classes/UserDTO.html","title":"class - UserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                accessToken\n                            \n                            \n                                    Readonly\n                                address\n                            \n                            \n                                    Readonly\n                                avatar\n                            \n                            \n                                birth\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                gender\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                lastLoginAt\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                phone\n                            \n                            \n                                    Readonly\n                                role\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(object: any)\n                    \n                \n                        \n                            \n                                Defined in src/auth/dto/user.dto.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        object\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user.dto.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user.dto.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user.dto.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user.dto.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user.dto.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user.dto.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lastLoginAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user.dto.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user.dto.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user.dto.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user.dto.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserDTO {\n\n    readonly id: string;\n    readonly accessToken: string;\n    readonly createdAt: Date;\n    readonly updatedAt: Date;\n    readonly lastLoginAt: Date;\n\n    constructor(object: any) {\n        this.id = object._id;\n        this.firstName = object.firstName;\n        this.lastName = object.lastName;\n        this.username = object.username;\n        this.email = object.email;\n        this.phone = object.phone;\n        this.role = object.role;\n        this.birth = object.birth;\n        this.gender = object.gender;\n        object.address !== undefined ? this.address = undefined : this.address = object.address;\n        this.avatar = object.avatar;\n        this.createdAt = object.createdAt;\n        this.updatedAt = object.updatedAt;\n        this.lastLoginAt = object.lastLogin;\n        this.accessToken = object.accessToken;\n    }\n\n    readonly username: string;\n    readonly password: string;\n    readonly email: string;\n    readonly firstName: string;\n    readonly lastName: string;\n    readonly phone: string;\n    readonly role: string;\n    readonly gender: string;\n    readonly address: {};\n    birth: string;\n    readonly avatar: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Users.html":{"url":"interfaces/Users.html","title":"interface - Users","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Users\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/users.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        avatar\n                                \n                                \n                                        birth\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        deleted\n                                \n                                \n                                        deletedAt\n                                \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        gender\n                                \n                                \n                                        lastLoginAt\n                                \n                                \n                                        lastName\n                                \n                                \n                                        password\n                                \n                                \n                                        phone\n                                \n                                \n                                        role\n                                \n                                \n                                        updatedAt\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birth\n                                    \n                                \n                                \n                                    \n                                        birth:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleted\n                                    \n                                \n                                \n                                    \n                                        deleted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deletedAt\n                                    \n                                \n                                \n                                    \n                                        deletedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                    \n                                \n                                \n                                    \n                                        gender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLoginAt\n                                    \n                                \n                                \n                                    \n                                        lastLoginAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\n\ninterface Address {\n    addr1: string;\n    addr2: string;\n    city: string;\n    state: string;\n    country: string;\n    zip: string;\n}\n\nexport interface Users extends Document {\n    username: string;\n    password: string;\n    email: string;\n    firstName: string;\n    lastName: string;\n    phone: string;\n    role: string;\n    gender: string;\n    birth: Date;\n    address: Address;\n    avatar: string;\n    createdAt: Date;\n    updatedAt: Date;\n    lastLoginAt: Date;\n    deleted: boolean;\n    deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers(req, decodedEmail)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/auth/users.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    decodedEmail\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { IResponse } from '../shared/interfaces/response.interface';\nimport { ResponseError } from '../shared/dto/response-error.dto';\nimport { ResponseSuccess } from '../shared/dto/response-success.dto';\nimport { User } from './user.decorator';\n\n@Controller('users')\nexport class UsersController {\n\n    constructor(\n        private readonly usersService: UsersService,\n    ) { }\n\n    // TODO: Añadir middleware o decorator para capturar paginadores/filtros/ordering/etc.\n    // Paginador Page y Limit creados ahora pendiente de *filtros y ordering*\n    @Get()\n    async getUsers(\n        @Req() req,\n        @User('email') decodedEmail,\n    ): Promise {\n        try {\n            const page = req.paginator.page;\n            const limit = req.paginator.limit;\n            const result = await this.usersService.getUsers(page, limit);\n            return new ResponseSuccess('COMMON.SUCCESS', result);\n        } catch (error) {\n            return new ResponseError('COMMON.ERROR', error);\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                USERS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, UserModelPag: PaginateModel)\n                    \n                \n                        \n                            \n                                Defined in src/auth/users.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserModelPag\n                                                  \n                                                        \n                                                                        PaginateModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers(page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/users.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/users.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Users } from './interfaces/users.interface';\nimport { PaginateModel } from 'mongoose';\nimport { UserDTO } from './dto/user.dto';\n\n@Injectable()\nexport class UsersService {\n\n    USERS = [];\n\n    constructor(\n        @InjectModel('Users') private readonly userModel: Model,\n        @InjectModel('Users') private readonly UserModelPag: PaginateModel,\n    ) { }\n\n    async getUsers(page: number, limit: number) {\n        this.USERS = [];\n        const options = { page, limit };\n        const result = await this.UserModelPag.paginate({}, options);\n        const docs = result.docs;\n        delete result.docs;\n        docs.map((doc: any) => {\n            const user = new UserDTO(doc);\n            return this.USERS.push(user);\n        });\n        const output = { users: this.USERS, ...result };\n        return output;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/pipes/validation.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildError\n                            \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildError(errors)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/pipes/validation.pipe.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errors\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            toValidate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toValidate(metatype)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/pipes/validation.pipe.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metatype\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/pipes/validation.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, ArgumentMetadata, BadRequestException, HttpStatus, Injectable } from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n    async transform(value, metadata: ArgumentMetadata) {\n\n        if (!value) {\n            throw new BadRequestException('No data submitted');\n        }\n\n        const { metatype } = metadata;\n        if (!metatype || !this.toValidate(metatype)) {\n            return value;\n        }\n        const object = plainToClass(metatype, value);\n        const errors = await validate(object);\n        if (errors.length > 0) {\n            throw new HttpException({ message: 'Input data validation failed', errors: this.buildError(errors) }, HttpStatus.BAD_REQUEST);\n        }\n        return value;\n    }\n\n    private buildError(errors) {\n        const result = {};\n        errors.forEach(el => {\n            const PROP = el.property;\n            Object.entries(el.constraints).forEach(constraint => {\n                result[PROP + constraint[0]] = `${constraint[1]}`;\n            });\n        });\n        return result;\n    }\n\n    private toValidate(metatype): boolean {\n        const types = [String, Boolean, Number, Array, Object];\n        return !types.find((type) => metatype === type);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/dto/auth-credentials.dto.ts\n            \n            class\n            AuthCredentialsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/create-user.dto.ts\n            \n            class\n            CreateUserDTO\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/auth/dto/login-user.dto.ts\n            \n            class\n            LoginUserDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/dto/user.dto.ts\n            \n            class\n            UserDTO\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/auth/interfaces/jwt-payload.interface.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/interfaces/users.interface.ts\n            \n            interface\n            Address\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/interfaces/users.interface.ts\n            \n            interface\n            Users\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/auth/jwt/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/schemas/user.schema.ts\n            \n            variable\n            GENDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/schemas/user.schema.ts\n            \n            variable\n            ROLES_VALIDOS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            HOST\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            JWT_SECRET\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            MONGO_URI\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            PORT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            SERVER_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/shared/classes/paginator.class.ts\n            \n            class\n            PaginatorClass\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/dto/response-error.dto.ts\n            \n            class\n            ResponseError\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shared/dto/response-success.dto.ts\n            \n            class\n            ResponseSuccess\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shared/interceptors/loggin.interceptor.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/response.interface.ts\n            \n            interface\n            IResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/middleware/paginator.middleware.ts\n            \n            injectable\n            PaginatorMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/pipes/validation.pipe.ts\n            \n            injectable\n            ValidationPipe\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^6.0.0\n        \n            @nestjs/core : ^6.0.0\n        \n            @nestjs/jwt : ^6.1.1\n        \n            @nestjs/mongoose : ^6.1.2\n        \n            @nestjs/passport : ^6.1.0\n        \n            @nestjs/platform-express : ^6.0.0\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.9.1\n        \n            compression : ^1.7.4\n        \n            config : ^3.1.0\n        \n            crypto : ^1.0.1\n        \n            csurf : ^1.10.0\n        \n            dotenv : ^8.0.0\n        \n            express-rate-limit : ^5.0.0\n        \n            helmet : ^3.18.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            moment : ^2.24.0\n        \n            mongoose : ^5.6.3\n        \n            mongoose-paginate-v2 : ^1.3.0\n        \n            mongoose-unique-validator : ^2.0.3\n        \n            passport : ^0.4.0\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.12\n        \n            rimraf : ^2.6.2\n        \n            rxjs : ^6.5.2\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Bootstrap Application\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCore Server of Integralclick\nIntroduction\nIn this readme will belong all the project introduction for contribution, installation and purposes of this project.\nAPI Docs\nGo to the API Documentation by Postman\nInstallation\nJust fork/clone this project in your local machine and then run:\nbash\n$ npm i\nBy defaul there's a config folder with some yaml files which indicates if you are running on production or development mode, neverworthless there's a out of the box feature with DotEnv that you can use for production more securely or even better if you use the own server's environment variables. You only have to create a new .env in the root of the project and then use the example.env as template your new environment variables.\n...\n|- config\n    |- default.yml\n    |- production.yml\n    |- development.yml\n...\n|- example.env\n...\nDevelopment\nFor running development mode you will have a benefit, with the following comand that it will hear your changes in realtime with the one command as well will build the documentation at the same time:\n```bash\n$ npm run start:dev\nor\n$ yarn start:dev # for yarn\n```\nBuild\nIf you make changes in the project it is required to run build command for building it. If you would like to automatically build then just use Development Mode since it would not just build the code, but will also hear in real-time the changes you make.\nFor building run:\n```bash\nnpm run build\nor\nyarn build # for yarn\n```\nProduction\nThen if you want to run into production you can simply run: \n```bash\n$ npm run start:prod\nor\n$ yarn start:prod # if you want to use yarn instead of npm of course.\n```\n\nPlease note that Production would not build the project just run dist/main.js for For build click here\n\nBuild Documentation\nDocumentation is one of the more important steps we have to do in this project so please remember to document every annotation, function, class or whatever inside this project to maintain our team notificated and well informed.\nFor building the documentation you can use as default method the development mode since it will generate the documentation in the first command however everytime make sure you manually build it with: \n```bash\nnpm run build:doc\nor\nyarn build:doc # for yarn\n```\nContribution\nThis project is under licence PROPIETARY and you will need to be allowed to modify / improve this work with belong of our company, code conduct instruction will be provided in short future as well as the proper code documentation, api documentation and all the necesary tools to work with us.\nFeature list\n\nDocumentation with Compodoc at v0.1.2-alpha\nSecurity measures with CORS implemented at v0.1.3-alpha\nConfig PRODUCTION / DEVELOPMENT modes with yaml at v0.1.3-alpha\nDotEnv for Environment Variable for Production at v0.1.3-alpha\nConstants for common configuration and TypeScript helping. at v0.1.3-alpha\nCompression Library integration for optimization at v0.1.4-alpha\nMongooseCoreModule integration at v0.1.4-alpha\n\nUpdate 2019/07/8 at v0.2-alpha\n\nModule Auth Created, SignIn & SignUp User with JWT implementation.\nJWT with Passport Strategy implemented\nDecorator for User JWT Payload uncoding.\nDTO & Interfaces for custom response format\nInterceptor loggin for getting output from requests\nPipes Module created for ObjectID format validation, Validation.\nSchema and DB Model for Users\nUse of useGlobalPipes in bootstrap\nBug Fixes.\n\nTODO's\n\n Environment Variables for Production / Development Mode.\n Documentation with Compodoc \n Authentication strategy with JWT and Local\n Database setup\n Consent Registry Schema for RGPD\n Email Integration for Double Opt-In on Registration and Password Recovery.\n Continuous Integration Testing\n Architecture for Modules / Common Utils / Custom Libraries / ETC.\n Links to the API Documentation\n\nChangelog\nPlease check out the tag section.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PipesModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GENDER   (src/.../user.schema.ts)\n                        \n                        \n                            HOST   (src/.../constants.ts)\n                        \n                        \n                            JWT_SECRET   (src/.../constants.ts)\n                        \n                        \n                            MONGO_URI   (src/.../constants.ts)\n                        \n                        \n                            PORT   (src/.../constants.ts)\n                        \n                        \n                            ROLES_VALIDOS   (src/.../user.schema.ts)\n                        \n                        \n                            SERVER_URL   (src/.../constants.ts)\n                        \n                        \n                            User   (src/.../user.decorator.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/schemas/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GENDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    values: ['man', 'woman', 'no_defined'],\n    message: '\\'{VALUE}\\' is not an allowed option.',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ROLES_VALIDOS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    values: ['ADMIN_ROLE', 'USER_ROLE'],\n    message: '\\'{VALUE}\\' is not a allowed role.',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n    username: { type: String, required: true },\n    password: { type: String, required: true },\n    email: { type: String, required: true },\n    firstName: String,\n    lastName: String,\n    phone: String,\n    role: {\n        type: String,\n        default: 'USER_ROLE',\n        enum: ROLES_VALIDOS,\n    },\n    gender: {\n        type: String,\n        default: 'no_defined',\n        enum: GENDER,\n    },\n    birth: {\n        type: Date,\n        required: true,\n    },\n    address: {\n        addr1: String,\n        addr2: String,\n        city: String,\n        state: String,\n        country: String,\n        zip: Number,\n    },\n    avatar: String,\n    createdAt: {\n        type: Date,\n        default: Date.now,\n    },\n    updatedAt: Date,\n    lastLoginAt: Date,\n    deleted: {\n        type: Boolean,\n        default: false,\n    },\n    deletedAt: Date,\n}, { strict: 'throw' })\n                        \n                    \n\n\n            \n        \n\n    src/config/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HOST\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `http://${process.env.HOST}`\n                        \n                    \n\n                \n                    \n                        Server's hostname by default localhost\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            JWT_SECRET\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : sha1((process.env.JWT_SECRET || config.get('jwt.secret')))\n                        \n                    \n\n                \n                    \n                        Secret bypassed with sha1 encription for more securely\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MONGO_URI\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${process.env.MONGO_URI}${(process.env.DB_DATABASE || config.get('db.database'))}`\n                        \n                    \n\n                \n                    \n                        Gets MONGO_URI variable from EV or YAML\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : process.env.SERVER_PORT || config.get('server.port')\n                        \n                    \n\n                \n                    \n                        PORT which the server will be running\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SERVER_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${HOST}:${PORT}`\n                        \n                    \n\n                \n                    \n                        Server's URL constructor\n\n                    \n                \n\n            \n        \n\n    src/auth/user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            User\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data, req) => {\n\n    if (!!req.user) {\n        return !!data ? req.user[data] : req.user;\n    }\n\n    const token = req.headers.authorization ? (req.headers.authorization as string).split(' ')[1] : null;\n    if (token && token[1]) {\n        const decoded: any = jwt.verify(token, JWT_SECRET);\n        return !!data ? decoded[data] : decoded.user;\n    }\n\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
